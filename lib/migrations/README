Generic single-database configuration.
# Freebie Tracker 🎁

A Python application to track freebies (swag) collected by developers from companies at hackathons and events.

## Entity Relationships

Company ↔ Dev: Many-to-Many (through Freebies)
Company → Freebie: One-to-Many
Dev → Freebie: One-to-Many
Freebie: Belongs to both a Company and a Dev

Summary

| Entity   | Fields                      |
|----------|-----------------------------|
| Company  | `id`, `name`, `founding_year` |
| Dev      | `id`, `name`               |
| Freebie  | `id`, `item_name`, `value`, `dev_id`, `company_id` |

[View DB Diagram](https://dbdiagram.io/d/68343a530240c65c4438b599)

## Install dependencies
pipenv install && pipenv shell

# Initialize database
alembic upgrade head
python seed.py  *sample data

## Usage
Start the interactive console:
python debug.py

-Oldest company
Company.oldest_company(session).name  # => "Lintech"

-Give a new freebie
company = session.query(Company).first()
dev = session.query(Dev).first()
company.give_freebie(dev, "Sticker Pack", 5, session)
session.commit()

-Check if dev received a specific item
dev.received_one("Sticker Pack")  # => True

-Transfer freebie from one dev to another
freebie = session.query(Freebie).filter_by(item_name="Sticker Pack").first()
new_dev = session.query(Dev).filter_by(name="Daniel").first()
dev.give_away(new_dev, freebie, session)

-Print details
print(freebie.print_details())  # => "Daniel owns a Sticker Pack from TechPolly"

-Models
Company: Has many freebies through freebies table

Dev: Has many freebies and companies through freebies table

Freebie: Belongs to both a company and a dev

## Methods
Company
give_freebie(dev, item_name, value, session)
oldest_company(session) → Company

Dev
received_one(item_name) → bool
give_away(new_dev, freebie, session) → boolean

Freebie
print_details() → str

## Notes
-Uses association_proxy for many-to-many shortcut access.

-Migrations handled via Alembic.

-Sample data included in seed.py for testing relationships.

## File structure
├── models.py         # SQLAlchemy models & relationships
├── seed.py           # Populates database
├── debug.py          # Starts an interactive console
├── alembic/          # Migrations directory
├── README.md         # Project documentation
└── freebies.db       # SQLite database

License
MIT © [Pauline Moraa]